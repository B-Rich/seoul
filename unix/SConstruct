# -*- Mode: Python -*-

env = Environment(CPPPATH = ['../include', "include"],
                  LINKFLAGS = '-m32 -g -pthread ',
                  CCFLAGS = '-m32 -g -O1 -fno-strict-aliasing -Wall -Wextra -Wno-unused-parameter -Wno-parentheses -pthread',
                  CXXFLAGS = '-std=gnu++11 -fno-rtti -fno-exceptions')

cc   = ARGUMENTS.get('cc')
cxx  = ARGUMENTS.get('cxx')

if not (cxx and cc):
    print("You probably want to set a both cc and cxx!")

if cc:
    print("CC forced to '%s'." % cc)
    env['CC'] = cc

if cxx:
    print("CXX forced to '%s'." % cxx)
    env['CXX'] = cxx


# Add flag to env[key] if the compiler is able to build an object file
# with this. extension can be '.c' or '.cc'.
def AddOptionalFlag(context, extension, key, flag):
    context.Message('Check if compiler supports "%s"... ' % flag)
    old_var = context.env[key];
    context.env[key] += ' ' + flag + ' '
    result = context.TryCompile('', extension)
    context.Result(result)
    if not result:
        context.env[key] = old_var
    return result

conf = Configure(env, custom_tests = {'AddOptionalFlag' : AddOptionalFlag})

conf.AddOptionalFlag('.cc', 'CCFLAGS', '-Wno-constant-logical-operand')

# Link with rt library when needed.
if not conf.CheckFunc('timer_create'):
    if conf.CheckLib('rt'):
        if not conf.CheckFunc('timer_create'):
            print ("POSIX timer API seems broken.")
            Exit(1)
    else:
            print ("POSIX timer API where art thou?")
            Exit(1)
env = conf.Finish()

AlwaysBuild(Command('version.inc', [], """( git describe --dirty --long --always || echo UNKNOWN ) | sed 's/^\\(.*\\)$/"\\1"/' > $TARGET"""))


Precious(env.Command(["../executor/instructions.inc"], ["../executor/build_instructions.py"], "$SOURCE > $TARGET"))

seoul = env.Program('seoul',
                    [
                     '../model/memorycontroller.cc',
                     '../model/nullio.cc',
                     '../model/pic8259.cc',
                     '../model/pit8254.cc',
                     '../model/sysctrlport.cc',
                     '../model/keyboardcontroller.cc',
                     '../model/ps2keyboard.cc',
                     '../model/ps2mouse.cc',
                     '../model/rtc146818.cc',
                     '../model/serial16550.cc',
                     '../model/sink.cc',
                     '../model/vga.cc',
                     '../executor/vbios_disk.cc',
                     '../executor/vbios_keyboard.cc',
                     '../executor/vbios_mem.cc',
                     '../executor/vbios_multiboot.cc',
                     '../executor/vbios_reset.cc',
                     '../executor/vbios_time.cc',
                     '../model/ioapic.cc',
                     '../model/pcihostbridge.cc',
                     '../model/pmtimer.cc',
                     '../model/vcpu.cc',
                     '../model/vbios.cc',
                     '../model/lapic.cc',
                     '../model/msi.cc',
                     '../executor/halifax.cc',
                     '../host/hostkeyboard.cc',
                     ] +
                    Glob('*.cc'))

Default(seoul)

# EOF
